name: dockercompose15493120551840756744
services:
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mongo_data
        target: /data/db
        volume: {}
  catalogo.api:
    build:
      context: D:\santy\CURSOS\.NET\.NET 6\Microservices\EShopping
      dockerfile: Catalogo/Catalogo.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings__BrandsCollection: Brands
      DatabaseSettings__CollectionName: Products
      DatabaseSettings__ConnectionString: mongodb://catalogdb:27017
      DatabaseSettings__DatabaseName: CatalogDb
      DatabaseSettings__TypesCollection: Types
      ElasticConfiguration__Uri: http://elasticsearch:9200
    image: catalogoapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "9000"
        protocol: tcp
networks:
  default:
    name: dockercompose15493120551840756744_default
volumes:
  mongo_data:
    name: dockercompose15493120551840756744_mongo_data